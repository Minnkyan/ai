{
    "title": "챗GPT와 랭체인을 활용한 LLM 기반 AI 앱 개발",
    "introduce": "챗GPT와 랭체인으로 프로덕션 수준의 LLM 애플리케이션 만들기!\n\n이 책은 챗GPT와 랭체인 프레임워크를 이용해 대규모 언어 모델(LLM)을 실제로 사용할 수 있는 수준의 애플리케이션에 통합하는 방법을 단계별 실습을 통해 알려준다. OpenAI API와 랭체인의 기본 개념부터 웹 애플리케이션과 슬랙 앱 구현, 그리고 프로덕션 환경에 배포하기까지 실전 사례를 중심으로 LLM 애플리케이션 개발의 전 과정을 익힐 수 있다. 또한 벡터 데이터베이스, 서버리스 아키텍처 등 최신 기술의 활용법과 보안, 개인정보보호 등 실무에 필요한 노하우도 배울 수 있다. 이 책을 통해 여러분도 LLM의 무한한 잠재력을 현실에 적용할 수 있는 개발자로 한 걸음 더 나아갈 수 있을 것이다.",
    "toc": "▣ 1장: 대규모 언어 모델(LLM)을 이용한 애플리케이션을 개발하고 싶다!\n\n1.1 챗GPT를 사용해 보자\n1.2 프롬프트로 할 수 있는 일\n__일상 업무에 활용해 보자\n1.3 프로그래밍에 활용해 보자\n1.4 챗GPT 사용 시 주의 사항\n1.5 챗GPT의 유료 플랜으로 할 수 있는 것들\n__GPT-4\n__브라우징\n__데이터 분석\n__챗GPT 외의 OpenAI 서비스\n1.6 대규모 언어 모델(LLM)을 비즈니스에 활용\n1.7 LLM을 활용한 비즈니스 및 응용 사례 소개\n__사이다스 주식회사 사례: CYDAS PEOPLE Copilot Chat\n__PingCAP 주식회사 사례: Chat2Query\n__Alexa 기술 사례 (개인 개발) : helloGPT\n__주식회사 소라콤 사례: SORACOM Harvest Data Intelligence\n1.8 LLM을 이용한 애플리케이션 개발에서 주의해야 할 점\n1.9 이 책에서 다루는 기술에 대하여\n__랭체인\n__클라우드 서비스 (특히 서버리스)\n__슬랙 앱으로 협업을 촉진\n요약\n\n\n\n2.1 왜 갑자기 프롬프트 엔지니어링?\n__챗GPT의 프롬프트 엔지니어링\n__애플리케이션 개발에서의 프롬프트 엔지니어링\n__프롬프트 엔지니어링은 위험하지 않나?\n2.2 프롬프트 엔지니어링이란?\n2.3 프롬프트 구성 요소의 기초\n__주제: 레시피 생성 AI 앱\n__프롬프트 템플릿화\n__명령과 입력 데이터의 분리\n__문맥을 제공하기\n__출력 형식 지정하기\n__프롬프트 구성 요소 요약\n2.4 Prompt Engineering Guide에서: 챗GPT의 무한한 잠재력을 이끌어내다\n__Zero-shot 프롬프팅\n__Few-shot 프롬프팅\n__Zero-shot Chain of Thought 프롬프팅\n요약\n\n\n\n3.1 OpenAI의 문서 생성 모델\n__챗GPT의 ‘모델’\n__OpenAI의 API로 사용할 수 있는 문서 생성 모델\n__모델 스냅숏\n3.2 챗GPT의 API 기본 사항\n__Chat Completions API\n__Chat Completions API 요금\n__발생된 요금 확인\n3.3 입출력 길이 제한과 과금에 영향을 미치는 ‘토큰’\n__토큰\n__Tokenizer와 tiktoken 소개\n__한국어의 토큰 수\n3.4 Chat Completions API를 사용할 수 있는 환경 준비하기\n__Google Colab이란?\n__Google Colab 노트북 만들기\n__OpenAI의 API 키 준비\n3.5 Chat Completions API를 만져보기\n__OpenAI의 라이브러리\n__Chat Completions API 호출\n__대화 기록에 기반한 응답 얻기\n__응답을 스트리밍으로 받기\n__기본 파라미터\n3.6 Function calling\n__Function calling 개요\n__Function calling 샘플 코드\n__파라미터 ‘function_call’\n__Function calling을 응용한 JSON 생성\n요약\n\n\n\n4.1 랭체인 개요\n__랭체인 사용 사례\n__랭체인을 배우는 이유\n__랭체인의 모듈\n__랭체인 설치\n4.2 Language models\n__LLMs\n__Chat Models\n__Callback을 이용한 스트리밍\n__언어 모델 요약\n4.3 Prompts\n__PromptTemplate\n__ChatPromptTemplate\n__Example selectors\n__프롬프트 요약\n4.4 Output parsers\n__Output parsers 개요\n__PydanticOutputParser를 이용해 Python 객체 가져오기\n__Output parsers 요약\n4.5 Chains\n__LLMChain-PromptTemplate, Language model, OutputParser 연결하기\n__SimpleSequentialChain-Chain과 Chain 연결하기\n__Chains 요약\n4.6 Memory\n__ConversationBufferMemory\n__더욱 편리한 Memory\n__Memory 저장 위치\n__Memory 요약\n\n\n\n5.1 Data connection\n__RAG(Retrieval Augmented Generation)\n__Data connection 개요\n__Document loaders\n__Document transformers\n__Text embedding models\n__Vector stores\n__Retrievers\n__RetrievalQA(Chain)\n__Data connection 요약\n5.2 Agents\n__Agents 개요\n__Agents 사용 예시\n__Agents의 작동 원리와 ReAct 개념\n__Tools\n__Toolkits\n__Function calling을 사용하는 OpenAI Functions Agent\n__한 번에 여러 도구를 사용하기\n__Agents 요약\n요약\n\n\n\n6.1 이번 장에서 구현할 응용 프로그램\n__구현할 애플리케이션의 구성\n__이 책으로 개발하는 방법\n__AWS Cloud9 개요\n__스트림릿 개요\n__전체 코드\n6.2 Cloud9 실행 및 개발 환경 구축하기\n__Cloud9 환경 만들기\n__깃허브 저장소 생성하기\n__Cloud9과 깃허브 연동\n__파이썬 환경 구축하기\n6.3 스트림릿의 헬로 월드\n6.4 사용자 입력 받기\n6.5 입력 내용과 응답을 화면에 표시하기\n6.6 대화 기록 보기\n6.7 LangChain으로 OpenAI의 Chat Completions API 실행하기\n6.8 Agent를 사용하여 필요에 따라 외부 정보 검색하게 하기\n6.9 채팅 대화 기록을 바탕으로 응답하기\n6.10 스트림릿 커뮤니티 클라우드에 배포\n__종속 패키지 목록 작성\n__깃허브에 소스 코드 업로드하기\n__스트림릿 커뮤니티 클라우드에 배포하기\n__다른 사용자 초대하기\n요약\n\n\n\n7.1 슬랙 앱을 만드는 이유\n__어떤 구성으로 할까?\n__개발 환경\n__깃허브 저장소의 파일 구성\n7.2 환경 준비\n__Cloud9 환경 만들기\n__깃허브에서 슬랙 앱용 저장소 생성하기\n__파이썬 가상 환경 활성화하기\n7.3 환경 설정 파일 만들기\n7.4 슬랙 앱 새로 만들기\n7.5 소켓 모드 활성화\n7.6 애플리케이션 만들기\n7.7 이벤트 설정하기\n7.8 액션 전송 및 응답하기\n7.9 스레드 내 답글 달기\n7.10. OpenAI API 호출하기\n7.11 스트리밍으로 응답하기\n7.12 대화 기록 보관하기\n__Momento Cache란?\n7.13 Lazy 리스너에서 슬랙 재시도 전에 간단한 응답을 반환하는 방법\n7.14 AWS Lambda에서 실행되는 핸들러 함수 만들기\n7.15 chat.update API 제한 우회하기\n7.16 AI 생성 메시지임을 표시하기\n7.17 배포하기\n7.18 Socket Mode에서 AWS Lambda로 전환하기\n요약\n\n\n\n8.1 챗GPT가 독자적인 지식으로 답변하게 한다\n__파인튜닝과 RAG\n__RAG 워크플로\n__답변문 생성에 LLM이 필요한가?\n__업무를 압박하는 ‘무언가를 찾는 시간’\n__사내 데이터 정비하기\n8.2 임베딩이란?\n8.3 구현할 애플리케이션 개요\n__완성판 소스코드\n8.4 개발 환경 구축하기\n__Cloud9의 디스크 공간이 부족할 때 확장하는 방법\n8.5 샘플 데이터 준비\n8.6 파인콘 설정\n__파인콘이란?\n__파인콘 이외의 벡터 데이터베이스\n__파인콘 가입하기\n8.7 파인콘에 벡터 데이터 저장하기\n8.8 파인콘 검색 및 답변하기\n8.9 대화 기록을 바탕으로 질의응답하기\n__단순히 대화 기록을 넣어도 잘 작동하지 않는 경우\n__대화 이력을 바탕으로 질문을 다시 작성한다.\n8.10 RunnablePassthrough 사용하기\n요약\n\n\n\n9.1 기업에서 생성 AI를 활용하려면\n9.2 공공기관·협회의 ‘생성형 AI 이용 가이드라인’을 바탕으로 자체 가이드라인 마련\n__외부 서비스 이용 시 서비스 약관을 꼼꼼히 읽을 것\n9.3 서비스 기획 및 설계 단계에서의 과제\n__프로젝트 리스크 대응\n9.4 테스트 및 평가에 대하여\n__LLM 부분 평가 방법\n__랭스미스의 성능 모니터링\n9.5 보안 대책에 대하여\n__OWASP Top 10 for Large Language Model Applications\n__랭체인 코어의 취약점 제거에 대하여\n9.6 개인 정보 보호 관점 및 일본의 개인정보 보호 제도\n__개인정보보호법에서 규정한 본인 동의 및 목적 내 사용\n__개인정보 보호에 관한 ‘결정지향적’ 이익모델과 정보적 타자성으로부터의 자유에 대하여\n9.7 EU에서 규정한 금지 AI 및 고위험 AI 처리 동향\n\n\n\nA.1 AWS 가입\nA.2 Cloud9 환경 생성\n__Cloud9 요금 설명\nA.3 Cloud9와 깃허브 연동\n__깃허브와 SSH 설정\n__Git 사용자 설정\n__깃허브에서 저장소 복제하기\nA.4 Cloud9에서 파이썬 환경 구축\n__pyenv 설치\n__Python 3.10 설치\n__Python 3.10을 사용하기 위한 절차\n__가상 환경에 대하여\nA.5 Momento 가입\n\n\n\nB.1 LCEL(LangChain Expression Language)이란?\nB.2 LCEL의 기본 사용법\n__prompt와 model을 연결하기\n__output_parser 연결\nB.3 LCEL의 작동 방식\nB.4 약간 더 복잡한 LCEL 예제\n__규칙 기반 처리(일반 함수) 끼워 넣기\n__RAG(검색 증강 생성)\nB.5 결론"
}