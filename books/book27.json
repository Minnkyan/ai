{
    "title": "켄트 벡의 Tidy First?",
    "introduce": "익스트림 프로그래밍의 창시자, 켄트 벡\n그의 수십 년 경험과 통찰이 담겨 있는 ‘경험적 소프트웨어 설계’ 노하우\n저자와 옮긴이가 함께 만든 책\n옮긴이 노트(별책부록) 특별 구성: 켄트 벡과 옮긴이의 소통 기록 + 옮긴이 특별 부록\n\n익스트림 프로그래밍(XP)의 창시자이자 소프트웨어 패턴의 선구자, 켄트 벡이 10년 만에 돌아왔다. 격변의 시기에 놓인 우리를 위한 그의 첫 번째 조언은, 시스템의 전체적인 구조를 생각하며 코드를 작성하고, 복잡한 코드는 논리적인 작은 조각으로 정리하는 방법이다. 이 코딩 노하우를 32가지로 책에 간결하게 정리했으며, 소프트웨어 설계의 기반이 되는 결합도, 응집도, 설계 옵션, 비용 등에 대한 저자만의 인사이트도 함께 담았다. 더 나은 프로그래밍을 할 수 있는 방법이 바로 여기에 있다.",
    "toc": "본권\n\nPart 1 코드 정리법\nChapter 1 보호 구문\nChapter 2 안 쓰는 코드\nChapter 3 대칭으로 맞추기\nChapter 4 새로운 인터페이스로 기존 루틴 부르기\nChapter 5 읽는 순서\nChapter 6 응집도를 높이는 배치\nChapter 7 선언과 초기화를 함께 옮기기\nChapter 8 설명하는 변수\nChapter 9 설명하는 상수\nChapter 10 명시적인 매개변수\nChapter 11 비슷한 코드끼리\nChapter 12 도우미 추출\nChapter 13 하나의 더미\nChapter 14 설명하는 주석\nChapter 15 불필요한 주석 지우기\n\n\nChapter 16 코드 정리 구분\nChapter 17 연쇄적인 정리\nChapter 18 코드 정리의 일괄 처리량\nChapter 19 리듬\nChapter 20 얽힘 풀기\nChapter 21 코드 정리 시점\n\n\nChapter 22 요소들을 유익하게 관계 맺는 일\nChapter 23 구조와 동작\nChapter 24 경제 이론: 시간 가치와 선택 가능성\nChapter 25 오늘의 1달러가 내일의 1달러보다 크다\nChapter 26 옵션\nChapter 27 옵션과 현금흐름 비교\nChapter 28 되돌릴 수 있는 구조 변경\nChapter 29 결합도\nChapter 30 콘스탄틴의 등가성\nChapter 31 결합도와 결합도 제거\nChapter 32 응집도\nChapter 33 결론\n\n\nAppendix A 참고 문헌\n\n\nPart 1 켄트 벡과 옮긴이의 소통 기록\nChapter 1 PREFACE\nChapter 2 1부 코드 정리법\nChapter 3 2부 관리\nChapter 4 3부 이론\n\n\nChapter 5 켄트 벡의 글을 번역하며 알게 된 것들\nChapter 6 개발자가 테스트를 보는 세 가지 관점\nChapter 7 소프트웨어 설계 20년 해 보고 깨달은 ‘좋은 설계’의 조건\nChapter 8 느슨한 결합(loosely coupled) 원칙을 활용한 소프트웨어 설계\nChapter 9 소프트웨어 ‘설계’의 정의는 변해야 한다"
}