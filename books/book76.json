{
    "title": "코딩셰프의 플러터 맛집",
    "introduce": "플러터 전문 채널 ‘코딩셰프’의 명강의를 그대로!\n다트부터 크로스 플랫폼 앱 구현까지 플러터를 맛있게 먹는 방법!\n\n플러터계 일타강사! 코딩셰프의 명강의가 책으로 탄생했다. 수년간 오로지 플러터 분야 강좌만으로 수만 명의 구독자와 수백 만의 누적 조회수를 만든 바로 그 채널이다. 코딩셰프는 유튜브 채널을 통해 순한 맛(기초) 과정부터 매운맛(심화) 과정까지 체계적인 커리큘럼을 선보이며, 한 명의 플러터 입문자도 절대 포기하지 않고 끝까지 학습할 수 있도록 세심하게 설명한다. 이 책은 이러한 코딩셰프의 학습 철학과 플러터에 대한 신념을 모두 담았다.\n\n『코딩셰프의 플러터 맛집』은 플러터를 처음 만난 입문자가 길을 잃지 않도록 프로그램 설치, 개발 환경을 설정하는 방법부터 하나씩 꼼꼼히 설명한다. 이어지는 이론 파트에서는 다트의 기초와 플러터 앱을 만들기 위한 핵심 문법은 물론, 다양한 위젯을 통해 플러터의 구성 요소를 실습과 함께 제대로 이해할 수 있도록 안내한다. 누구나 시원하게 소화할 수 있는 프로젝트 또한 든든하게 구성했다. 외부 패키지를 활용한 ‘사운드 앱’, 반응형 웹을 적용한 ‘로또 앱’, 실시간 날씨를 반영한 ‘날씨 앱’, 파이어베이스를 활용한 ‘로그인 앱’ 등을 구현해 볼 수 있다. 이미 플러터 학습자들 사이에서 소문난 맛집! 『코딩셰프의 플러터 맛집』을 통해 플러터를 맛있게 배워 보자.",
    "toc": "01장 플러터 입문\n\n__1.1 플러터와 다트 이해하기\n__1.2 플러터에 관심을 가져야 하는 이유\n__1.3 설문 조사 결과로 본 플러터\n\n02장 윈도우 개발 환경 구축\n\n__2.1 자바 설치하기\n__2.2 개발 환경 구축하기\n__2.3 안드로이드 스튜디오 설치하기\n__2.4 첫 번째 프로젝트 만들기\n__2.5 ‘flutter doctor’ 활용하기\n__2.6 비주얼 스튜디오 코드 설치하기\n__2.7 프로젝트 실행하기\n\n\n\n__3.1 Flutter SDK 설치하기\n__3.2 안드로이드 스튜디오 설치하기\n__3.3 CocoaPods 설치하기\n__3.4 iOS 시뮬레이터 실행하기\n__3.5 맥 OS에서 비주얼 스튜디오 코드 설치하기\n\n\n\n__4.1 위젯이란?\n__4.2 위젯은 레고 블록이다!\n__4.3 위젯 트리\n__4.4 상태의 정의\n__4.5 위젯의 종류\n\n\n\n__5.1 객체, 클래스, 인스턴스\n__5.2 속성과 기능\n__5.3 변수와 인스턴스의 크기\n__5.4 클래스 만들기\n\n\n\n__6.1 VS code 세팅하기\n__6.2 플러터 프로젝트 구성 이해하기\n__6.3 플러터 기본 코드 이해하기 1\n__6.4 플러터 기본 코드 이해하기 2\n__6.5 클래스와 위젯의 정체\n__6.6 Material design3 이해하기\n\n\n\n__7.1 기본 위젯과 레이아웃의 구조 이해하기\n__7.2 앱 페이지 기본 구조 만들기\n__7.3 pubspec.yaml 파일을 통해 이미지 등록하기\n__7.4 Column 위젯 내에 자식 위젯 배치하기\n__7.5 Text 위젯 사용하기\n__7.6 crossAxisAlignment 속성과 Align 위젯\n__7.7 Row 위젯 사용하기\n__7.8 CircleAvatar 위젯 사용하기\n\n\n\n__8.1 앱의 구조 이해하기\n__8.2 main.dart 파일의 기본 코드 구성하기\n__8.3 AppBar 꾸미기\n__8.4 동물 이미지 배치하기\n__8.5 Animal Sounds 소리 구현하기\n\n\n\n__9.1 상속이란?\n__9.2 Stateless 위젯\n__9.3 엘리먼트 트리\n__9.4 Stateful 위젯\n\n\n\n__10.1 플러터의 주요 버튼 다루기\n__10.2 라우트와 화면 이동\n\n\n\n__11.1 프로젝트 생성 및 구성\n__11.2 레이아웃 구성\n__11.3 flutter_animate 적용\n__11.4 TextField 위젯\n__11.5 코드 리팩토링\n__11.6 Container 위젯과 Boxfit 속성\n\n\n\n__12.1 파일의 구성\n__12.2 Constraints 이해하기\n__12.3 로그인 앱에 반응형 레이아웃 적용하기\n__12.4 MediaQuery.of(context)\n__12.5 SingleChildScrollView 위젯\n\n\n\n__13.1 조건문과 로그인 기능 구현\n__13.2 컬렉션 타입\n__13.3 로또 앱의 기능 구현\n__13.4 로또 앱 UI 개선\n__13.5 로또 앱 UI 완성\n__13.6 로또 앱에 반응형 레이아웃 적용하기\n\n\n\n__14.1 Future의 개념\n__14.2 비동기 방식\n__14.3 이벤트 루프\n__14.4 async와 await 키워드\n__14.5 try/catch 블록\n__14.6 앱에서 Future 출력하기\n__14.7 Stream과 StreamBuilder\n\n\n\n__15.1 API의 개념\n__15.2 OpenWeatherMap 사용하기\n__15.3 Geolocator 패키지 설치하기\n__15.4 initState() 메서드와 예외 처리\n__15.5 http 패키지 사용하기\n__15.6 JSON 데이터\n__15.7 코드 리팩토링\n__15.8 실시간 날씨 데이터 가져오기\n__15.9 화면에 날씨 데이터 출력하기\n__15.10 로딩 인디케이터 추가하기\n__15.11 날씨 앱 마무리하기\n\n\n\n__16.1 파이어베이스 소개\n__16.2 로그인 앱과 파이어베이스 프로젝트 연동하기\n__16.3 firebase_auth 패키지 설치 및 이메일 인증 설정하기\n__16.4 회원 등록 페이지 생성 및 사인 업 기능 구현\n__16.5 로그인 기능 구현\n__16.6 로그아웃 기능 구현\n\n\n\n__17.1 상태 관리의 의미\n__17.2 Provider 도구 알아보기\n\n_부록 ChatGPT와 프로그래밍의 미래"
}