{
    "title": "최고의 프로덕트는 무엇이 다른가",
    "introduce": "새로운 소프트웨어나 서비스를 만들려는\n창업가, 대표, PO, PM을 위한 가이드\n\n소프트웨어나 서비스를 개발할 때 기획서만 잘 쓰면 실패하지 않고 제품이 나올 수 있을까? 수많은 책이 나왔고 방법론도 많이 있지만 여전히 어려운 문제들이 많다. 이 책은 단순한 방법론을 넘어 초기 기획부터 개발 과정까지 사람들과 어떻게 일해야 하는지, 조직구조는 어떻게 개선하는지에 대해 구체적으로 설명한다.",
    "toc": "서문\n저자소개\n감사의 글\n추천사\n\n제1장 남들이 안 알려주는 소프트웨어 개발의 본질들\n\n1-1 들어가며\n1-2 이상한 나라의 소프트웨어 개발\n1-3 사람들이 잘 모르는 소프트웨어 개발의 본질들\n1-4 해봐서 안 되는 이론은 버리고 되는 거 하자\n1-5 요약\n\n제2장 소프트웨어 개발 자체를 어떻게 해야 할까?\n\n2-1 들어가며\n2-2 불확실성을 다루는 방법\n2-3 소프트웨어 개발은 시작하면 계속해야 한다\n2-4 우리가 만들 것 합의하기\n2-5 가장 초기 서비스를 만드는 프로덕트 로드맵 생각해 보기\n2-6 했을 때 반드시 효과가 있는 방법-고객 참여\n2-7 요약\n\n\n\n3-1 들어가며\n3-2 없는 것을 만들었다고 하지 마세요\n3-3 그럼에도 불구하고 만들지 않은 것을 팔아야 할 때\n3-4 고객에게 피드백을 어떻게 받아야 하나요?\n3-5 테크스펙 - 새로운 기능을 만들 때 같이 쓰고 일하자\n3-6 관리할 수 없는 모든 것을 다 해준다고 하면 무슨 일이 벌어질까?\n3-7 왜 개발자는 맨날 모자라지?\n3-8 외주 개발사를 쓰려면, 반드시 이를 최고 관리자 수준에서 관리해야 한다\n3-9 핵심 개발자를 ‘반드시’ 제거하라\n3-10 파괴적인 아이디어나 기술이 시장을 와해시키는 조건\n3-11 공공기관은 어떻게 디지털 서비스를 만들어야 하나?\n3-12 요약\n\n\n\n4-1 들어가며\n4-2 피드백 루프를 그려보자\n4-3 피드백 루프 복원과 회복을 위한 원칙들\n4-4 피드백 루프는 어떻게 살려낼 수 있을까?\n4-5 위임형 전술(Auftragstaktik) - 피드백 루프가 살아나면 어떻게 되는가?\n4-6 피드백 루프를 멈추면 무슨 일이 벌어지는가\n4-7 요약\n\n\n\n5-1 명품은 비싸다\n5-2 인간의 존엄함을 지켜야 한다\n5-3 EoA(Essence of Agility)를 생각하라\n5-4 고객별로 소프트웨어나 서비스를 만들 때 기억해야 할 일\n5-5 우리는 결국 끝까지 가야만 실체를 알 수 있다"
}